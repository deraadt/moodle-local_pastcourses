{"version":3,"sources":["../src/pastcourses.js"],"names":["define","$","toggleClickHandler","node","nodename","click","e","preventDefault","attr","collapseNode","expandNode","addAriaToParent","ids","each","index","element","id","trim","init","toggleNode","keepExpanded"],"mappings":"AAwBAA,OAAM,iCAAC,CAAC,QAAD,CAAD,CAAa,SAASC,CAAT,CAAY,CAC3B,aAOA,QAASC,CAAAA,CAAT,CAA4BC,CAA5B,CAAkCC,CAAlC,CAA4C,CACxCD,CAAI,CAACE,KAAL,CAAW,SAASC,CAAT,CAAY,CAEnBA,CAAC,CAACC,cAAF,GAGA,GAAkC,CAA9B,EAAAJ,CAAI,CAACK,IAAL,CAAU,eAAV,CAAJ,CAAqC,CACjCC,CAAY,CAACN,CAAD,CAAOC,CAAP,CAGf,CAJD,IAIO,IAAkC,CAA9B,EAAAD,CAAI,CAACK,IAAL,CAAU,eAAV,CAAJ,CAAqC,CACxCE,CAAU,CAACP,CAAD,CAAOC,CAAP,CAEb,CACJ,CAbD,CAcH,CAOD,QAASK,CAAAA,CAAT,CAAsBN,CAAtB,CAA4BC,CAA5B,CAAsC,CAElCH,CAAC,CAAC,oCAAsCG,CAAtC,CAAiD,GAAlD,CAAD,CAAwDI,IAAxD,CAA6D,aAA7D,CAA4E,GAA5E,EAGAL,CAAI,CAACK,IAAL,CAAU,eAAV,CAA2B,GAA3B,EAGAL,CAAI,CAACK,IAAL,CAAU,eAAV,CAA2B,GAA3B,CACF,CAOF,QAASE,CAAAA,CAAT,CAAoBP,CAApB,CAA0BC,CAA1B,CAAoC,CAEhCH,CAAC,CAAC,oCAAsCG,CAAtC,CAAiD,GAAlD,CAAD,CAAwDI,IAAxD,CAA6D,aAA7D,CAA4E,GAA5E,EAGAL,CAAI,CAACK,IAAL,CAAU,eAAV,CAA2B,GAA3B,EAGAL,CAAI,CAACK,IAAL,CAAU,eAAV,CAA2B,GAA3B,CACH,CAOD,QAASG,CAAAA,CAAT,CAAyBR,CAAzB,CAA+BC,CAA/B,CAAyC,CAGrC,GAAIQ,CAAAA,CAAG,CAAG,EAAV,CAGAX,CAAC,CAAC,oCAAsCG,CAAtC,CAAiD,GAAlD,CAAD,CAAwDS,IAAxD,CAA6D,SAASC,CAAT,CAAgBC,CAAhB,CAAyB,CAClF,GAAIC,CAAAA,CAAE,CAAGf,CAAC,CAACc,CAAD,CAAD,CAAWP,IAAX,CAAgB,UAAhB,CAAT,CACAP,CAAC,CAACc,CAAD,CAAD,CAAWP,IAAX,CAAgB,IAAhB,CAAsBQ,CAAtB,EACAJ,CAAG,CAAGA,CAAG,CAAGI,CAAN,CAAW,GACpB,CAJD,EAOA,GAAY,EAAR,EAAAJ,CAAJ,CAAgB,CACZT,CAAI,CAACK,IAAL,CAAU,eAAV,CAA2BI,CAAG,CAACK,IAAJ,EAA3B,CACH,CAID,GAAkC,CAA9B,EAAAd,CAAI,CAACK,IAAL,CAAU,eAAV,CAAJ,CAAqC,CACjCL,CAAI,CAACK,IAAL,CAAU,eAAV,CAA2B,GAA3B,CACH,CAFD,IAEO,IAAkC,CAA9B,EAAAL,CAAI,CAACK,IAAL,CAAU,eAAV,CAAJ,CAAqC,CACxCL,CAAI,CAACK,IAAL,CAAU,eAAV,CAA2B,GAA3B,CACH,CACJ,CAED,MAAO,CACHU,IAAI,CAAE,cAASC,CAAT,CAAqBC,CAArB,CAAmC,CAGrC,GAAIjB,CAAAA,CAAI,CAAGF,CAAC,CAAC,+BAAgCkB,CAAhC,CAA6C,KAA9C,CAAZ,CAGAjB,CAAkB,CAACC,CAAD,CAAOgB,CAAP,CAAlB,CAGAR,CAAe,CAACR,CAAD,CAAOgB,CAAP,CAAf,CAGA,GAAI,CAACC,CAAL,CAAmB,CACfX,CAAY,CAACN,CAAD,CAAOgB,CAAP,CACf,CACJ,CAhBE,CAkBV,CA1GK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Local plugin \"Past Courses\" - Local Library\n *\n * @package    local_pastcourses\n * @copyright  2019 Michael de Raadt, Canberra Grammar School <michaelderaadt@gmail.com>\n *             Based on Boost Fumbling (C) 2017 Kathrin Osswald, Ulm University <kathrin.osswald@uni-ulm.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery'], function($) {\n    \"use strict\";\n\n    /**\n     * Click handler to toggle the given nav node.\n     * @param {Object} node The nav node which should be toggled.\n     * @param {string} nodename The nav node's nodename.\n     */\n    function toggleClickHandler(node, nodename) {\n        node.click(function(e) {\n            // Prevent that the browser opens the node's default action link (if existing).\n            e.preventDefault();\n\n            // If currently expanded, collapse.\n            if (node.attr('data-collapse') == 0) {\n                collapseNode(node, nodename);\n\n            // If currently collapsed, expand.\n            } else if (node.attr('data-collapse') == 1) {\n                expandNode(node, nodename);\n\n            }\n        });\n    }\n\n    /**\n     * Helper function to collapse the given nav node.\n     * @param {Object} node The nav node which should be toggled.\n     * @param {string} nodename The nav node's nodename.\n     */\n    function collapseNode(node, nodename) {\n        // Set the parent hidden attribute to true.\n        $('.list-group-item[data-parent-key=' + nodename + ']').attr(\"data-hidden\", \"1\");\n\n        // Change the collapse attribute to true.\n        node.attr(\"data-collapse\", \"1\");\n\n        // Change the aria-expanded attribute to false.\n        node.attr(\"aria-expanded\", \"0\");\n     }\n\n    /**\n     * Helper function to expand the given nav node.\n     * @param {Object} node The nav node which should be toggled.\n     * @param {string} nodename The nav node's nodename.\n     */\n    function expandNode(node, nodename) {\n        // Set the parent hidden attribute to false.\n        $('.list-group-item[data-parent-key=' + nodename + ']').attr(\"data-hidden\", \"0\");\n\n        // Change the collapse attribute to false.\n        node.attr(\"data-collapse\", \"0\");\n\n        // Change the aria-expanded attribute to true.\n        node.attr(\"aria-expanded\", \"1\");\n    }\n\n    /**\n     * Add aria-attributes to a parent node.\n     * @param {Object} node The nav node which should get the aria-attributes.\n     * @param {string} nodename The nav node's nodename.\n     */\n    function addAriaToParent(node, nodename) {\n        // Add ids to the child nodes for referencing in aria-controls.\n        // Initialise string variable to remember the child node ids.\n        var ids = '';\n\n        // Get the elements that have the nodename as their data-parent-key attribute.\n        $('.list-group-item[data-parent-key=' + nodename + ']').each(function(index, element) {\n            var id = $(element).attr('data-key');\n            $(element).attr('id', id);\n            ids = ids + id + ' ';\n        });\n\n        // Add aria-controls attribute if we have ids to reference.\n        if (ids !== '') {\n            node.attr('aria-controls', ids.trim());\n        }\n\n        // Add aria-expanded attribute.\n        // If the parent node is currently expanded or collapsed.\n        if (node.attr('data-collapse') == 0) {\n            node.attr('aria-expanded', '1');\n        } else if (node.attr('data-collapse') == 1) {\n            node.attr('aria-expanded', '0');\n        }\n    }\n\n    return {\n        init: function(toggleNode, keepExpanded) {\n\n            // Search node to be collapsible.\n            var node = $('.list-group-item[data-key=\"' + toggleNode + '\"]');\n\n            // Add a click handler to this node.\n            toggleClickHandler(node, toggleNode);\n\n            // Add aria-attributes to this node.\n            addAriaToParent(node, toggleNode);\n\n            // Set initial state to collapsed.\n            if (!keepExpanded) {\n                collapseNode(node, toggleNode);\n            }\n        }\n    };\n});"],"file":"pastcourses.min.js"}